@page "/login"
<h1 class="h3 mb-3 pt-3 font-weight-normal text-primary" style="text-align:center;">Sign In</h1>

<EditForm Model="UserForAuthentication" OnValidSubmit="LoginUser">
  <DataAnnotationsValidator />
  @if (ShowAuthenticationErrors)
  {
    <p class="text-center text-danger">@Errors</p>
  }
  <InputText @bind-Value="UserForAuthentication.UserName" id="email" placeholder="Email..." class="form-control mb-2" />
  <ValidationMessage For="(()=>UserForAuthentication.UserName)" />
  <InputText @bind-Value="UserForAuthentication.Password" type="password" placeholder="Password..." id="password" class="form-control mb-2" />
  <ValidationMessage For="(()=>UserForAuthentication.Password)" />
  <button type="submit" class="btn btn-success btn-block"><i class="fas fa-sign-in-alt"></i> Sign in</button>

  @if (IsProcessing)
  {
    <a href="/registration"
       class="btn btn-success btn-block disabled"><i class="fas fa-user-plus"></i> Please Wait...</a>
  }
  else
  {
    <a href="/registration"
       class="btn btn-primary text-white mt-3"><i class="fas fa-user-plus"></i> Register as a new user</a>
  }

</EditForm>

@code {
  protected override async Task OnInitializedAsync()
  {
    //await Task.Delay(5000);
  }
}
