<div class="modal fade" data-backdrop="static" data-keyboard="false" id="deleteConfirmationModal" tabindex="-1" role="dialog">
  <div class="modal-dialog  modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="()=>OnConfirmationChanged(false)">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        Are you sure you want to delete
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="()=>OnConfirmationChanged(false)">
          Cancel
        </button>

        @if (parentCompIsProcessing)
        {
          <button type="button" class="btn btn-danger"><i class="fa fa-spin fa-spinner"></i>Processing</button>
        }
        else if(parentCompIsProcessing == false)
        {
          <button type="button" class="btn btn-danger" @onclick="()=>OnConfirmationChanged(true)">
            Delete
          </button>
        }

      </div>
    </div>
  </div>
</div>

@code {
  [Parameter]
  public EventCallback<bool> ConfirmationChanged { get; set; }

  //부모한테 받은 프로퍼티도 실시간으로 상태가 반영됨
  [Parameter] public bool parentCompIsProcessing { get; set; }

  protected async Task OnConfirmationChanged(bool value)
  {
    await ConfirmationChanged.InvokeAsync(value);
  }
}
