@page "/hotel-room-order"
@inject IRoomOrderDetailsRepository roomOrderDetailRepository
@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager

@if (!IsLoading)
{
  <h4 class="card-title text-info">Hotel Room Order's</h4>

  <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" PageSize="5" AllowPaging="true" AllowSorting="true" Data="@HotelRoomOrders" TItem="RoomOrderDetailsDTO" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
    <Columns>
      <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="Name" Filterable="false" Title="Customer Name" Frozen="true" Width="50px" TextAlign="TextAlign.Center" />
      <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="Phone" Filterable="false" Title="PhoneNo." Frozen="true" Width="50px" TextAlign="TextAlign.Center" />
      <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="Email" Filterable="false" Title="Email" Frozen="true" Width="50px" TextAlign="TextAlign.Center" />
      <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="HotelRoomDTO.Name" Filterable="false" Title="Room Name" Frozen="true" Width="50px" TextAlign="TextAlign.Center" />
      <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="Status" Filterable="false" Title="Status" Frozen="true" Width="50px" TextAlign="TextAlign.Center" />
      <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="CheckInDate" Filterable="false" Title="Check In Date"
                            Frozen="true" Width="50px" TextAlign="TextAlign.Center" FormatString="{0:d}" />
      <RadzenDataGridColumn TItem="RoomOrderDetailsDTO" Property="Id" Filterable="false" Title="" Frozen="true" Width="50px" TextAlign="TextAlign.Center" >
        <Template Context="data">
          <NavLink class="btn btn-primary" href="@($"hotel-room-order/details/{data.Id}")">Details</NavLink>
        </Template>
      </RadzenDataGridColumn>
    </Columns>
  </RadzenDataGrid>
}
else
{
  <p>loading...</p>
}
<div>
  <p>Debug</p>
  <p>HotelRoomOrders size: @debugListSize</p>
</div>

@code {
  private IEnumerable<RoomOrderDetailsDTO> HotelRoomOrders { get; set; } = new List<RoomOrderDetailsDTO>();
  private bool IsLoading { get; set; } = false;

  public int debugListSize { get; set; } = 0;

  protected override async Task OnInitializedAsync()
  {
    IsLoading = true;
    HotelRoomOrders = await roomOrderDetailRepository.GetAllRoomOrderDetails();
    debugListSize = HotelRoomOrders.Count();
    Console.WriteLine($"## HotelRoomOrders size: {HotelRoomOrders.Count()}");
    IsLoading = false;
  }
}
